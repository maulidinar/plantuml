@startuml APIClassDiagram

Server *-- Database
Server *-- Controller
Server *-- Middleware 
Controller *-- Model
Model *-- Query 

class Server {
    - server: Express
    - database: Database
    + Server(): Server
}

class Database {
    - config(): void
    + initialize(): void
    + synchronize(): void
}

class Middleware {
    - AdminAuth(): void
    + Middleware(): Middleware
}

@enduml

@startuml ManagerAPIClassDiagram
Model <|-- UserModel
Model <|-- OrderModel
Model <|-- ItemModel

abstract class Model {

}

class UserModel {

}

class OrderModel {

}

class ItemModel {

}

@enduml

@startuml RepositoryAPIClassDiagram
Query <|-- UserQuery
Query <|-- OrderQuery
Query <|-- ItemQuery
@enduml

@startuml ControllerAPIClassDiagram
Controller <|-- UserController
Controller <|-- OrderController
Controller <|-- ItemController

abstract class Controller {
    # initialize(): void
    # routes(): object
    + Controller(): Controller
}

class UserController {
    + login(): void
    + setToken(): void
}

class OrderController {

}

class ItemController {

}

@enduml